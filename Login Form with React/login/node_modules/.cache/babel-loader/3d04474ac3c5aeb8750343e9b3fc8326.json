{"ast":null,"code":"var _jsxFileName = \"/Users/siddhantsharma/Desktop/React_Intro/login/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  return loggedIn ?\n  /*#__PURE__*/\n  // Storing data in localstorage can be an effective way to cache data. This may come with some security issues.\n  _jsxDEV(\"h1\", {\n    children: localStorage.getItem(\"loginToken\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Login, {\n    setLoggedIn: setLoggedIn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/siddhantsharma/Desktop/React_Intro/login/src/App.js"],"names":["React","Login","App","loggedIn","setLoggedIn","useState","localStorage","getItem"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAhC;AACA,SAAOF,QAAQ;AAAA;AACb;AACA;AAAA,cAAKG,YAAY,CAACC,OAAb,CAAqB,YAArB;AAAL;AAAA;AAAA;AAAA;AAAA,UAFa,gBAIb,QAAC,KAAD;AAAO,IAAA,WAAW,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,UAJF;AAMD;;GARQF,G;;KAAAA,G;AAUT,eAAeA,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Login from \"./Login\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  return loggedIn ? (\n    // Storing data in localstorage can be an effective way to cache data. This may come with some security issues.\n    <h1>{localStorage.getItem(\"loginToken\")}</h1>\n  ) : (\n    <Login setLoggedIn={setLoggedIn} />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}